0.1.3
  - Add change queue
  - Update docs for remove queue: action is delete
  - Wrong action name used for remove channel
  - Put message is documented

0.1.2
  - Add reset qmgr
  - Add create/copy/remove channel
  - Use MQINQMP for reading MQRFH2 properties
  - User/Pwd for connecting to a queuemanager
  - Remove premake4 support

0.1.1
  - Return a HTTP status when a POCO exception occurs.
  - Improve queuemanager pool management
  - Add clear queue
  - Add ping qmgr
  - Add get message
  - Add browse message
  - Add inquire chlauth
  - Add set chlauth
  - Browse statistics/accounting messages
  - Browse RFH messages
  - Add create queue
  - Add delete queue
  - Add copy queue
  - Queuemanager configuration can be read from ODBC

0.1.0
  - Web app has its own repository now: mqwebapp
  - 'filter' renamed to 'input' in mqweb JSON answer
  - 'mqweb' property in JSON answer renamed to 'meta'
  - On success the information is always stored in a 'data' array.
  - Browse DLQ messages
  - Integrate event messages in browse action. Message event action removed.
  - Dictionary tables changed: 'display' renamed into 'text'
  - Changed license from EUPL to MIT
  - Add new MQ 9.0.0 attributes
  - Add expiry to PCF messages to avoid orphaned messages when the Command
    server answers too late
  - Queuemanager configuration can be stored in SQLite
  - Add mq.web.app.cors-origin property

0.0.13
  - Upgrade documents to use latest Jekyll release
  - Use unsigned char for ebcdic code. Fix #13
  - This release is the last one with static/templates.
    New webapp will be developed in separate repository mqwebapp.
  - Empty connection id must be initialized #12

0.0.12
  - Add inquire topic
  - Add inquire topicstatus (tpstatus)
  - Add inquire subscription (sub)
  - Add inquire subscription status (sbstatus)
  - Add suspend cluster qmgr
  - Add resume cluster qmgr
  - First steps in adding websocket for browsing messages
  - Add inquire channel initiator (chinit)
  - Start support for CMake

0.0.11
  - Add inquire connection (conn)
  - Add inquire namelist (nl)
  - Add inquire process (process)
  - Add inquire service (service)
  - Add inquire authentication information (authinfo)
  - Add inquire authority record (authrec)
  - Support for JSONP
  - Allow to run without mq.web.templates / mq.web.static configuration
  - Add connection pooling

0.0.10
  - queueExcludeSystem/queueExcludeTemp renamed into excludeSystem/excludeTemp
  - channelExcludeSystem renamed into excludeSystem
  - All MQ attributes (dictionary) are now stored in a SQLite database
  - Add inquire clusterqmgr (clusqmgr)
  - Wrong default channel SYSTEM.DEFAULT.SVRCONN
  - Add mq.web.defaultChannel configuration property
  - api/chstatus: instanceType can also be used when channelname is passed as
    URI parameter
  - Enhancement #6: Add support for connecting with SSL channels
  - Solve #5: MQRC_TRUNCATED for PCF messages from z/OS
  - Solve #7: MQRC_Q_MGR_NAME_ERROR received due to wrong URI in web pages

0.0.9
  - Limit browse of messages to 16K
  - To ease installation, switched to statically linked POCO
  - DEFINE SERVICE(MQWEB) is now possible using the new --qmgr and --port
    command line arguments.
  - KnockOut is replaced by AngularJS
  - Add inquire listener
  - Add inquire listener status
  - URI starts with /web (built-in pages) or /api (JSON requests).
  - AngularJS makes it possible to reduce the number of actions in controllers
    on the server. Views are moved to the client whenever possible.
  - Add inquire queuemanager status

0.0.8
  - Solve bug #4 Chars shift on messagecontroller.
  - Show EBCDIC/ASCII in message hex view
  - Create a dashboard page
  - Channel / Channelstatus page

0.0.7
  - Can connect in client mode
  - Add support for channels
  - IP's can be denied/allowed
  - Use Poco 1.5
  - JSON module was donated to POCO, so we use that one.
  - Support for z/OS
  - ASCII / EBCDIC view of messages

0.0.6

  - Use own JSON classes
  - Make a first binary for Linux i686 available

0.0.5

  - Maintenance Release

0.0.4

  - Show message in hex using jQuery/Fancybox

0.0.3

  - Resolve 2219 (MQRC_CALL_IN_PROGRESS): Protect all MQI calls with a global mutex
